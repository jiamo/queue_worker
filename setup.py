# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['queue_worker']

package_data = \
{'': ['*']}

install_requires = \
[]

entry_points = \
{'console_scripts': ['queue_worker = queue_worker.cli:main']}

setup_kwargs = {
    'name': 'queue-worker',
    'version': '0.0.1',
    'description': 'queue worker for sync and async function',
    'long_description': '# Overview\n\nqueue worker for sync and async function\n\n[![Unix Build Status](https://img.shields.io/travis/com/jiamo/queue_worker.svg?label=unix)](https://travis-ci.com/jiamo/queue_worker)\n[![PyPI Version](https://img.shields.io/pypi/v/queue_worker.svg)](https://pypi.org/project/queue_worker)\n[![PyPI License](https://img.shields.io/pypi/l/queue_worker.svg)](https://pypi.org/project/queue_worker)\n\n# Setup\n\n## Requirements\n\n* Python 3.8+\n\n## Installation\n\nInstall it directly into an activated virtual environment:\n\n```text\n$ pip install queue_worker\n```\n\nor add it to your [Poetry](https://poetry.eustace.io/) project:\n\n```text\n$ poetry add queue_worker\n```\n\n# Usage\n\nAfter installation, the package can imported:\n\n```text\n\nasync def async_sleep_print(sleep_time):\n    await asyncio.sleep(sleep_time)\n    print("----: {} {}".format(threading.get_ident(), sleep_time))\n    return\n\n\nif __name__ == "__main__":\n    worker = Worker(16, queue_maxsize=4)\n    for i in range(100):\n        worker.push_work(partial(async_sleep_print, i%10))\n    worker.join()\n```\n',
    'author': 'jiamo',
    'author_email': 'life.130815@gmail.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://pypi.org/project/queue_worker',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)

# This setup.py was autogenerated using poetry.
